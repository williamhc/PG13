Package						pg13.presentation

InvokeMethod        		pg13.app.PG13						startUp
InvokeMethod				tests.atrStubs.StubInjector			injectMessageBoxStub

// go to the login screen
Click						MainWindow							btnMainLogin

// select Guest and checked that we're logged in as guest
SelectComboByIndex			LoginScreen							cmbUsernames 0	
TestComboValue				LoginScreen							cmbUsernames "Guest"
Click						LoginScreen							btnLogMeIn	
Test						MainWindow							lblLoggedInAs "Logged in as Guest"		

// go to the find screen and select the first puzzle to play
Click						MainWindow							btnPlay
SelectTableByRowValue 		FindScreen							table "Title" "My first puzzle"
Click						FindScreen							btnPlaySelectedPuzzle	

// ensure we picked the right puzzle
Test						PuzzlePropertiesWidgetView			txtPuzzleName "My first puzzle"

// fill in the letters, using the workaround method, because since letterwidgets are
// stored in a data structure, we cannot communicate to them directly
Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "f"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "0"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "a"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "1"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// partially complete solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Nice try but not quite right. Keep on trying to solve it!"
Package						pg13.presentation

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "r"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "2"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "t"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "3"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// incorrect solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Nice try but not quite right. Keep on trying to solve it!"
Package						pg13.presentation

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "k"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "2"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "e"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "3"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// correct solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Congrats! You solved it! You are the best! Why not try another one?"
Package						pg13.presentation


// go to the find screen and select the next puzzle to play
Click						MainWindow							btnPlay
SelectTableByRowValue 		FindScreen							table "Title" "another puzzle"
Click						FindScreen							btnPlaySelectedPuzzle	

// ensure we picked the right puzzle
Test						PuzzlePropertiesWidgetView			txtPuzzleName "another puzzle"

// fill in the letters, longer puzzle, jumbled order
Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "e"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "4"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "t"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "2"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "b"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "0"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "u"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "1"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// partially complete solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Nice try but not quite right. Keep on trying to solve it!"
Package						pg13.presentation

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "l"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "7"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "r"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "5"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// partially complete solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Nice try but not quite right. Keep on trying to solve it!"
Package						pg13.presentation

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "i"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "8"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "s"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "10"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

Set							CryptogramSolveWidgetPlay			txtLetterWidgetValue "f"
Set							CryptogramSolveWidgetPlay			txtLetterWidgetID "6"
Click						CryptogramSolveWidgetPlay			btnSubmitLetterWidget

// correct solution
Click						PuzzlePropertiesWidgetView			btnCheckSolution
Package						tests.atrStubs
Test						MessageBoxMakerStub					lblMessage "Congrats! You solved it! You are the best! Why not try another one?"
Package						pg13.presentation

//exit the application
Click						MainWindow							btnQuit

InvokeMethod        		pg13.app.PG13						shutDown

Close 						MainWindow							shell

